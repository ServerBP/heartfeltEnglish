export declare class CustomEventEmitter<T extends Record<string, any>> {
    private emitter;
    get on(): <K extends Extract<keyof T, string | symbol>>(eventName: K, fn: (params: T[K]) => void) => void;
    get once(): <K extends Extract<keyof T, string | symbol>>(eventName: K, fn: (params: T[K]) => void) => void;
    get emit(): <K extends Extract<keyof T, string | symbol>>(eventName: K, params: T[K]) => void;
    get removeListener(): <K extends Extract<keyof T, string | symbol>>(eventName: K, fn: (params: T[K]) => void) => void;
}
