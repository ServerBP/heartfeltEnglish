import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CoreServer } from './models.js';
import { Tournament } from './models.js';
import { QualifierEvent } from './models.js';
import { Match } from './models.js';
import { User } from './models.js';
/**
 * @generated from protobuf message proto.packets.Event
 */
export interface Event {
    /**
     * @generated from protobuf oneof: changed_object
     */
    changedObject: {
        oneofKind: "userAdded";
        /**
         * @generated from protobuf field: proto.packets.Event.UserAdded user_added = 1;
         */
        userAdded: Event_UserAdded;
    } | {
        oneofKind: "userUpdated";
        /**
         * @generated from protobuf field: proto.packets.Event.UserUpdated user_updated = 2;
         */
        userUpdated: Event_UserUpdated;
    } | {
        oneofKind: "userLeft";
        /**
         * @generated from protobuf field: proto.packets.Event.UserLeft user_left = 3;
         */
        userLeft: Event_UserLeft;
    } | {
        oneofKind: "matchCreated";
        /**
         * @generated from protobuf field: proto.packets.Event.MatchCreated match_created = 6;
         */
        matchCreated: Event_MatchCreated;
    } | {
        oneofKind: "matchUpdated";
        /**
         * @generated from protobuf field: proto.packets.Event.MatchUpdated match_updated = 7;
         */
        matchUpdated: Event_MatchUpdated;
    } | {
        oneofKind: "matchDeleted";
        /**
         * @generated from protobuf field: proto.packets.Event.MatchDeleted match_deleted = 8;
         */
        matchDeleted: Event_MatchDeleted;
    } | {
        oneofKind: "qualifierCreated";
        /**
         * @generated from protobuf field: proto.packets.Event.QualifierCreated qualifier_created = 9;
         */
        qualifierCreated: Event_QualifierCreated;
    } | {
        oneofKind: "qualifierUpdated";
        /**
         * @generated from protobuf field: proto.packets.Event.QualifierUpdated qualifier_updated = 10;
         */
        qualifierUpdated: Event_QualifierUpdated;
    } | {
        oneofKind: "qualifierDeleted";
        /**
         * @generated from protobuf field: proto.packets.Event.QualifierDeleted qualifier_deleted = 11;
         */
        qualifierDeleted: Event_QualifierDeleted;
    } | {
        oneofKind: "tournamentCreated";
        /**
         * @generated from protobuf field: proto.packets.Event.TournamentCreated tournament_created = 12;
         */
        tournamentCreated: Event_TournamentCreated;
    } | {
        oneofKind: "tournamentUpdated";
        /**
         * @generated from protobuf field: proto.packets.Event.TournamentUpdated tournament_updated = 13;
         */
        tournamentUpdated: Event_TournamentUpdated;
    } | {
        oneofKind: "tournamentDeleted";
        /**
         * @generated from protobuf field: proto.packets.Event.TournamentDeleted tournament_deleted = 14;
         */
        tournamentDeleted: Event_TournamentDeleted;
    } | {
        oneofKind: "serverAdded";
        /**
         * @generated from protobuf field: proto.packets.Event.ServerAdded server_added = 15;
         */
        serverAdded: Event_ServerAdded;
    } | {
        oneofKind: "serverDeleted";
        /**
         * @generated from protobuf field: proto.packets.Event.ServerDeleted server_deleted = 16;
         */
        serverDeleted: Event_ServerDeleted;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message proto.packets.Event.UserAdded
 */
export interface Event_UserAdded {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.User user = 2;
     */
    user?: User;
}
/**
 * @generated from protobuf message proto.packets.Event.UserUpdated
 */
export interface Event_UserUpdated {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.User user = 2;
     */
    user?: User;
}
/**
 * @generated from protobuf message proto.packets.Event.UserLeft
 */
export interface Event_UserLeft {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.User user = 2;
     */
    user?: User;
}
/**
 * @generated from protobuf message proto.packets.Event.MatchCreated
 */
export interface Event_MatchCreated {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.Match match = 2;
     */
    match?: Match;
}
/**
 * @generated from protobuf message proto.packets.Event.MatchUpdated
 */
export interface Event_MatchUpdated {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.Match match = 2;
     */
    match?: Match;
}
/**
 * @generated from protobuf message proto.packets.Event.MatchDeleted
 */
export interface Event_MatchDeleted {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.Match match = 2;
     */
    match?: Match;
}
/**
 * @generated from protobuf message proto.packets.Event.QualifierCreated
 */
export interface Event_QualifierCreated {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent event = 2;
     */
    event?: QualifierEvent;
}
/**
 * @generated from protobuf message proto.packets.Event.QualifierUpdated
 */
export interface Event_QualifierUpdated {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent event = 2;
     */
    event?: QualifierEvent;
}
/**
 * @generated from protobuf message proto.packets.Event.QualifierDeleted
 */
export interface Event_QualifierDeleted {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent event = 2;
     */
    event?: QualifierEvent;
}
/**
 * @generated from protobuf message proto.packets.Event.TournamentCreated
 */
export interface Event_TournamentCreated {
    /**
     * @generated from protobuf field: proto.models.Tournament tournament = 1;
     */
    tournament?: Tournament;
}
/**
 * @generated from protobuf message proto.packets.Event.TournamentUpdated
 */
export interface Event_TournamentUpdated {
    /**
     * @generated from protobuf field: proto.models.Tournament tournament = 1;
     */
    tournament?: Tournament;
}
/**
 * @generated from protobuf message proto.packets.Event.TournamentDeleted
 */
export interface Event_TournamentDeleted {
    /**
     * @generated from protobuf field: proto.models.Tournament tournament = 1;
     */
    tournament?: Tournament;
}
/**
 * @generated from protobuf message proto.packets.Event.ServerAdded
 */
export interface Event_ServerAdded {
    /**
     * @generated from protobuf field: proto.models.CoreServer server = 1;
     */
    server?: CoreServer;
}
/**
 * @generated from protobuf message proto.packets.Event.ServerDeleted
 */
export interface Event_ServerDeleted {
    /**
     * @generated from protobuf field: proto.models.CoreServer server = 1;
     */
    server?: CoreServer;
}
declare class Event$Type extends MessageType<Event> {
    constructor();
    create(value?: PartialMessage<Event>): Event;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event): Event;
    internalBinaryWrite(message: Event, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event
 */
export declare const Event: Event$Type;
declare class Event_UserAdded$Type extends MessageType<Event_UserAdded> {
    constructor();
    create(value?: PartialMessage<Event_UserAdded>): Event_UserAdded;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_UserAdded): Event_UserAdded;
    internalBinaryWrite(message: Event_UserAdded, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.UserAdded
 */
export declare const Event_UserAdded: Event_UserAdded$Type;
declare class Event_UserUpdated$Type extends MessageType<Event_UserUpdated> {
    constructor();
    create(value?: PartialMessage<Event_UserUpdated>): Event_UserUpdated;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_UserUpdated): Event_UserUpdated;
    internalBinaryWrite(message: Event_UserUpdated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.UserUpdated
 */
export declare const Event_UserUpdated: Event_UserUpdated$Type;
declare class Event_UserLeft$Type extends MessageType<Event_UserLeft> {
    constructor();
    create(value?: PartialMessage<Event_UserLeft>): Event_UserLeft;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_UserLeft): Event_UserLeft;
    internalBinaryWrite(message: Event_UserLeft, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.UserLeft
 */
export declare const Event_UserLeft: Event_UserLeft$Type;
declare class Event_MatchCreated$Type extends MessageType<Event_MatchCreated> {
    constructor();
    create(value?: PartialMessage<Event_MatchCreated>): Event_MatchCreated;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_MatchCreated): Event_MatchCreated;
    internalBinaryWrite(message: Event_MatchCreated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.MatchCreated
 */
export declare const Event_MatchCreated: Event_MatchCreated$Type;
declare class Event_MatchUpdated$Type extends MessageType<Event_MatchUpdated> {
    constructor();
    create(value?: PartialMessage<Event_MatchUpdated>): Event_MatchUpdated;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_MatchUpdated): Event_MatchUpdated;
    internalBinaryWrite(message: Event_MatchUpdated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.MatchUpdated
 */
export declare const Event_MatchUpdated: Event_MatchUpdated$Type;
declare class Event_MatchDeleted$Type extends MessageType<Event_MatchDeleted> {
    constructor();
    create(value?: PartialMessage<Event_MatchDeleted>): Event_MatchDeleted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_MatchDeleted): Event_MatchDeleted;
    internalBinaryWrite(message: Event_MatchDeleted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.MatchDeleted
 */
export declare const Event_MatchDeleted: Event_MatchDeleted$Type;
declare class Event_QualifierCreated$Type extends MessageType<Event_QualifierCreated> {
    constructor();
    create(value?: PartialMessage<Event_QualifierCreated>): Event_QualifierCreated;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_QualifierCreated): Event_QualifierCreated;
    internalBinaryWrite(message: Event_QualifierCreated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.QualifierCreated
 */
export declare const Event_QualifierCreated: Event_QualifierCreated$Type;
declare class Event_QualifierUpdated$Type extends MessageType<Event_QualifierUpdated> {
    constructor();
    create(value?: PartialMessage<Event_QualifierUpdated>): Event_QualifierUpdated;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_QualifierUpdated): Event_QualifierUpdated;
    internalBinaryWrite(message: Event_QualifierUpdated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.QualifierUpdated
 */
export declare const Event_QualifierUpdated: Event_QualifierUpdated$Type;
declare class Event_QualifierDeleted$Type extends MessageType<Event_QualifierDeleted> {
    constructor();
    create(value?: PartialMessage<Event_QualifierDeleted>): Event_QualifierDeleted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_QualifierDeleted): Event_QualifierDeleted;
    internalBinaryWrite(message: Event_QualifierDeleted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.QualifierDeleted
 */
export declare const Event_QualifierDeleted: Event_QualifierDeleted$Type;
declare class Event_TournamentCreated$Type extends MessageType<Event_TournamentCreated> {
    constructor();
    create(value?: PartialMessage<Event_TournamentCreated>): Event_TournamentCreated;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TournamentCreated): Event_TournamentCreated;
    internalBinaryWrite(message: Event_TournamentCreated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.TournamentCreated
 */
export declare const Event_TournamentCreated: Event_TournamentCreated$Type;
declare class Event_TournamentUpdated$Type extends MessageType<Event_TournamentUpdated> {
    constructor();
    create(value?: PartialMessage<Event_TournamentUpdated>): Event_TournamentUpdated;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TournamentUpdated): Event_TournamentUpdated;
    internalBinaryWrite(message: Event_TournamentUpdated, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.TournamentUpdated
 */
export declare const Event_TournamentUpdated: Event_TournamentUpdated$Type;
declare class Event_TournamentDeleted$Type extends MessageType<Event_TournamentDeleted> {
    constructor();
    create(value?: PartialMessage<Event_TournamentDeleted>): Event_TournamentDeleted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_TournamentDeleted): Event_TournamentDeleted;
    internalBinaryWrite(message: Event_TournamentDeleted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.TournamentDeleted
 */
export declare const Event_TournamentDeleted: Event_TournamentDeleted$Type;
declare class Event_ServerAdded$Type extends MessageType<Event_ServerAdded> {
    constructor();
    create(value?: PartialMessage<Event_ServerAdded>): Event_ServerAdded;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_ServerAdded): Event_ServerAdded;
    internalBinaryWrite(message: Event_ServerAdded, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.ServerAdded
 */
export declare const Event_ServerAdded: Event_ServerAdded$Type;
declare class Event_ServerDeleted$Type extends MessageType<Event_ServerDeleted> {
    constructor();
    create(value?: PartialMessage<Event_ServerDeleted>): Event_ServerDeleted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Event_ServerDeleted): Event_ServerDeleted;
    internalBinaryWrite(message: Event_ServerDeleted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Event.ServerDeleted
 */
export declare const Event_ServerDeleted: Event_ServerDeleted$Type;
export {};
