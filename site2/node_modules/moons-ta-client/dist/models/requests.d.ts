import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GameplayParameters } from './models.js';
import { LeaderboardEntry } from './models.js';
import { CoreServer } from './models.js';
import { Tournament_TournamentSettings_Pool } from './models.js';
import { Tournament_TournamentSettings_Team } from './models.js';
import { Tournament } from './models.js';
import { Permissions } from './models.js';
import { QualifierEvent_LeaderboardSort } from './models.js';
import { QualifierEvent_EventSettings } from './models.js';
import { Channel } from './discord.js';
import { QualifierEvent } from './models.js';
import { Map } from './models.js';
import { Match } from './models.js';
import { User } from './models.js';
/**
 * ---- Requests (GET (or do?) something where you need a response!) ---- //
 *
 * @generated from protobuf message proto.packets.Request
 */
export interface Request {
    /**
     * @generated from protobuf oneof: type
     */
    type: {
        oneofKind: "updateUser";
        /**
         * @generated from protobuf field: proto.packets.Request.UpdateUser update_user = 1;
         */
        updateUser: Request_UpdateUser;
    } | {
        oneofKind: "createMatch";
        /**
         * @generated from protobuf field: proto.packets.Request.CreateMatch create_match = 2;
         */
        createMatch: Request_CreateMatch;
    } | {
        oneofKind: "addUserToMatch";
        /**
         * @generated from protobuf field: proto.packets.Request.AddUserToMatch add_user_to_match = 3;
         */
        addUserToMatch: Request_AddUserToMatch;
    } | {
        oneofKind: "removeUserFromMatch";
        /**
         * @generated from protobuf field: proto.packets.Request.RemoveUserFromMatch remove_user_from_match = 4;
         */
        removeUserFromMatch: Request_RemoveUserFromMatch;
    } | {
        oneofKind: "setMatchLeader";
        /**
         * @generated from protobuf field: proto.packets.Request.SetMatchLeader set_match_leader = 5;
         */
        setMatchLeader: Request_SetMatchLeader;
    } | {
        oneofKind: "setMatchMap";
        /**
         * @generated from protobuf field: proto.packets.Request.SetMatchMap set_match_map = 6;
         */
        setMatchMap: Request_SetMatchMap;
    } | {
        oneofKind: "deleteMatch";
        /**
         * @generated from protobuf field: proto.packets.Request.DeleteMatch delete_match = 7;
         */
        deleteMatch: Request_DeleteMatch;
    } | {
        oneofKind: "createQualifierEvent";
        /**
         * @generated from protobuf field: proto.packets.Request.CreateQualifierEvent create_qualifier_event = 8;
         */
        createQualifierEvent: Request_CreateQualifierEvent;
    } | {
        oneofKind: "setQualifierName";
        /**
         * @generated from protobuf field: proto.packets.Request.SetQualifierName set_qualifier_name = 9;
         */
        setQualifierName: Request_SetQualifierName;
    } | {
        oneofKind: "setQualifierInfoChannel";
        /**
         * @generated from protobuf field: proto.packets.Request.SetQualifierInfoChannel set_qualifier_info_channel = 10;
         */
        setQualifierInfoChannel: Request_SetQualifierInfoChannel;
    } | {
        oneofKind: "setQualifierImage";
        /**
         * @generated from protobuf field: proto.packets.Request.SetQualifierImage set_qualifier_image = 11;
         */
        setQualifierImage: Request_SetQualifierImage;
    } | {
        oneofKind: "setQualifierFlags";
        /**
         * @generated from protobuf field: proto.packets.Request.SetQualifierFlags set_qualifier_flags = 12;
         */
        setQualifierFlags: Request_SetQualifierFlags;
    } | {
        oneofKind: "setQualifierLeaderboardSort";
        /**
         * @generated from protobuf field: proto.packets.Request.SetQualifierLeaderboardSort set_qualifier_leaderboard_sort = 13;
         */
        setQualifierLeaderboardSort: Request_SetQualifierLeaderboardSort;
    } | {
        oneofKind: "addQualifierMaps";
        /**
         * @generated from protobuf field: proto.packets.Request.AddQualifierMaps add_qualifier_maps = 14;
         */
        addQualifierMaps: Request_AddQualifierMaps;
    } | {
        oneofKind: "updateQualifierMap";
        /**
         * @generated from protobuf field: proto.packets.Request.UpdateQualifierMap update_qualifier_map = 15;
         */
        updateQualifierMap: Request_UpdateQualifierMap;
    } | {
        oneofKind: "removeQualifierMap";
        /**
         * @generated from protobuf field: proto.packets.Request.RemoveQualifierMap remove_qualifier_map = 16;
         */
        removeQualifierMap: Request_RemoveQualifierMap;
    } | {
        oneofKind: "deleteQualifierEvent";
        /**
         * @generated from protobuf field: proto.packets.Request.DeleteQualifierEvent delete_qualifier_event = 17;
         */
        deleteQualifierEvent: Request_DeleteQualifierEvent;
    } | {
        oneofKind: "addAuthorizedUser";
        /**
         * @generated from protobuf field: proto.packets.Request.AddAuthorizedUser add_authorized_user = 48;
         */
        addAuthorizedUser: Request_AddAuthorizedUser;
    } | {
        oneofKind: "addAuthorizedUserPermission";
        /**
         * @generated from protobuf field: proto.packets.Request.AddAuthorizedUserPermission add_authorized_user_permission = 49;
         */
        addAuthorizedUserPermission: Request_AddAuthorizedUserPermission;
    } | {
        oneofKind: "removeAuthorizedUserPermission";
        /**
         * @generated from protobuf field: proto.packets.Request.RemoveAuthorizedUserPermission remove_authorized_user_permission = 50;
         */
        removeAuthorizedUserPermission: Request_RemoveAuthorizedUserPermission;
    } | {
        oneofKind: "removeAuthorizedUser";
        /**
         * @generated from protobuf field: proto.packets.Request.RemoveAuthorizedUser remove_authorized_user = 51;
         */
        removeAuthorizedUser: Request_RemoveAuthorizedUser;
    } | {
        oneofKind: "getAuthorizedUsers";
        /**
         * @generated from protobuf field: proto.packets.Request.GetAuthorizedUsers get_authorized_users = 52;
         */
        getAuthorizedUsers: Request_GetAuthorizedUsers;
    } | {
        oneofKind: "getDiscordInfo";
        /**
         * @generated from protobuf field: proto.packets.Request.GetDiscordInfo get_discord_info = 53;
         */
        getDiscordInfo: Request_GetDiscordInfo;
    } | {
        oneofKind: "createTournament";
        /**
         * @generated from protobuf field: proto.packets.Request.CreateTournament create_tournament = 18;
         */
        createTournament: Request_CreateTournament;
    } | {
        oneofKind: "setTournamentName";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentName set_tournament_name = 19;
         */
        setTournamentName: Request_SetTournamentName;
    } | {
        oneofKind: "setTournamentImage";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentImage set_tournament_image = 20;
         */
        setTournamentImage: Request_SetTournamentImage;
    } | {
        oneofKind: "setTournamentEnableTeams";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentEnableTeams set_tournament_enable_teams = 21;
         */
        setTournamentEnableTeams: Request_SetTournamentEnableTeams;
    } | {
        oneofKind: "setTournamentEnablePools";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentEnablePools set_tournament_enable_pools = 44;
         */
        setTournamentEnablePools: Request_SetTournamentEnablePools;
    } | {
        oneofKind: "setTournamentShowTournamentButton";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentShowTournamentButton set_tournament_show_tournament_button = 45;
         */
        setTournamentShowTournamentButton: Request_SetTournamentShowTournamentButton;
    } | {
        oneofKind: "setTournamentShowQualifierButton";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentShowQualifierButton set_tournament_show_qualifier_button = 46;
         */
        setTournamentShowQualifierButton: Request_SetTournamentShowQualifierButton;
    } | {
        oneofKind: "setTournamentAllowUnauthorizedView";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentAllowUnauthorizedView set_tournament_allow_unauthorized_view = 54;
         */
        setTournamentAllowUnauthorizedView: Request_SetTournamentAllowUnauthorizedView;
    } | {
        oneofKind: "setTournamentScoreUpdateFrequency";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentScoreUpdateFrequency set_tournament_score_update_frequency = 47;
         */
        setTournamentScoreUpdateFrequency: Request_SetTournamentScoreUpdateFrequency;
    } | {
        oneofKind: "setTournamentBannedMods";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentBannedMods set_tournament_banned_mods = 23;
         */
        setTournamentBannedMods: Request_SetTournamentBannedMods;
    } | {
        oneofKind: "addTournamentTeam";
        /**
         * @generated from protobuf field: proto.packets.Request.AddTournamentTeam add_tournament_team = 24;
         */
        addTournamentTeam: Request_AddTournamentTeam;
    } | {
        oneofKind: "setTournamentTeamName";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentTeamName set_tournament_team_name = 25;
         */
        setTournamentTeamName: Request_SetTournamentTeamName;
    } | {
        oneofKind: "setTournamentTeamImage";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentTeamImage set_tournament_team_image = 26;
         */
        setTournamentTeamImage: Request_SetTournamentTeamImage;
    } | {
        oneofKind: "removeTournamentTeam";
        /**
         * @generated from protobuf field: proto.packets.Request.RemoveTournamentTeam remove_tournament_team = 27;
         */
        removeTournamentTeam: Request_RemoveTournamentTeam;
    } | {
        oneofKind: "addTournamentPool";
        /**
         * @generated from protobuf field: proto.packets.Request.AddTournamentPool add_tournament_pool = 28;
         */
        addTournamentPool: Request_AddTournamentPool;
    } | {
        oneofKind: "setTournamentPoolName";
        /**
         * @generated from protobuf field: proto.packets.Request.SetTournamentPoolName set_tournament_pool_name = 29;
         */
        setTournamentPoolName: Request_SetTournamentPoolName;
    } | {
        oneofKind: "addTournamentPoolMaps";
        /**
         * @generated from protobuf field: proto.packets.Request.AddTournamentPoolMaps add_tournament_pool_maps = 30;
         */
        addTournamentPoolMaps: Request_AddTournamentPoolMaps;
    } | {
        oneofKind: "updateTournamentPoolMap";
        /**
         * @generated from protobuf field: proto.packets.Request.UpdateTournamentPoolMap update_tournament_pool_map = 31;
         */
        updateTournamentPoolMap: Request_UpdateTournamentPoolMap;
    } | {
        oneofKind: "removeTournamentPoolMap";
        /**
         * @generated from protobuf field: proto.packets.Request.RemoveTournamentPoolMap remove_tournament_pool_map = 32;
         */
        removeTournamentPoolMap: Request_RemoveTournamentPoolMap;
    } | {
        oneofKind: "removeTournamentPool";
        /**
         * @generated from protobuf field: proto.packets.Request.RemoveTournamentPool remove_tournament_pool = 33;
         */
        removeTournamentPool: Request_RemoveTournamentPool;
    } | {
        oneofKind: "deleteTournament";
        /**
         * @generated from protobuf field: proto.packets.Request.DeleteTournament delete_tournament = 34;
         */
        deleteTournament: Request_DeleteTournament;
    } | {
        oneofKind: "addServer";
        /**
         * @generated from protobuf field: proto.packets.Request.AddServer add_server = 35;
         */
        addServer: Request_AddServer;
    } | {
        oneofKind: "connect";
        /**
         * @generated from protobuf field: proto.packets.Request.Connect connect = 36;
         */
        connect: Request_Connect;
    } | {
        oneofKind: "join";
        /**
         * @generated from protobuf field: proto.packets.Request.Join join = 37;
         */
        join: Request_Join;
    } | {
        oneofKind: "qualifierScores";
        /**
         * @generated from protobuf field: proto.packets.Request.QualifierScores qualifier_scores = 38;
         */
        qualifierScores: Request_QualifierScores;
    } | {
        oneofKind: "submitQualifierScore";
        /**
         * @generated from protobuf field: proto.packets.Request.SubmitQualifierScore submit_qualifier_score = 39;
         */
        submitQualifierScore: Request_SubmitQualifierScore;
    } | {
        oneofKind: "loadSong";
        /**
         * @generated from protobuf field: proto.packets.Request.LoadSong load_song = 40;
         */
        loadSong: Request_LoadSong;
    } | {
        oneofKind: "preloadImageForStreamSync";
        /**
         * @generated from protobuf field: proto.packets.Request.PreloadImageForStreamSync preload_image_for_stream_sync = 41;
         */
        preloadImageForStreamSync: Request_PreloadImageForStreamSync;
    } | {
        oneofKind: "showPrompt";
        /**
         * @generated from protobuf field: proto.packets.Request.ShowPrompt show_prompt = 42;
         */
        showPrompt: Request_ShowPrompt;
    } | {
        oneofKind: "remainingAttempts";
        /**
         * @generated from protobuf field: proto.packets.Request.RemainingAttempts remaining_attempts = 43;
         */
        remainingAttempts: Request_RemainingAttempts;
    } | {
        oneofKind: "getBotTokensForUser";
        /**
         * @generated from protobuf field: proto.packets.Request.GetBotTokensForUser get_bot_tokens_for_user = 55;
         */
        getBotTokensForUser: Request_GetBotTokensForUser;
    } | {
        oneofKind: "generateBotToken";
        /**
         * @generated from protobuf field: proto.packets.Request.GenerateBotToken generate_bot_token = 56;
         */
        generateBotToken: Request_GenerateBotToken;
    } | {
        oneofKind: "revokeBotToken";
        /**
         * @generated from protobuf field: proto.packets.Request.RevokeBotToken revoke_bot_token = 57;
         */
        revokeBotToken: Request_RevokeBotToken;
    } | {
        oneofKind: undefined;
    };
}
/**
 * --- State Update Requests ---//
 *
 * @generated from protobuf message proto.packets.Request.UpdateUser
 */
export interface Request_UpdateUser {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.User user = 2;
     */
    user?: User;
}
/**
 * -- Match -- //
 *
 * @generated from protobuf message proto.packets.Request.CreateMatch
 */
export interface Request_CreateMatch {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.Match match = 2;
     */
    match?: Match;
}
/**
 * @generated from protobuf message proto.packets.Request.AddUserToMatch
 */
export interface Request_AddUserToMatch {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string match_id = 2;
     */
    matchId: string;
    /**
     * @generated from protobuf field: string user_id = 3;
     */
    userId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.RemoveUserFromMatch
 */
export interface Request_RemoveUserFromMatch {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string match_id = 2;
     */
    matchId: string;
    /**
     * @generated from protobuf field: string user_id = 3;
     */
    userId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.SetMatchLeader
 */
export interface Request_SetMatchLeader {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string match_id = 2;
     */
    matchId: string;
    /**
     * @generated from protobuf field: string user_id = 3;
     */
    userId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.SetMatchMap
 */
export interface Request_SetMatchMap {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string match_id = 2;
     */
    matchId: string;
    /**
     * @generated from protobuf field: proto.models.Map map = 3;
     */
    map?: Map;
}
/**
 * @generated from protobuf message proto.packets.Request.DeleteMatch
 */
export interface Request_DeleteMatch {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string match_id = 2;
     */
    matchId: string;
}
/**
 * -- Qualifiers -- //
 *
 * @generated from protobuf message proto.packets.Request.CreateQualifierEvent
 */
export interface Request_CreateQualifierEvent {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent event = 2;
     */
    event?: QualifierEvent;
}
/**
 * @generated from protobuf message proto.packets.Request.SetQualifierName
 */
export interface Request_SetQualifierName {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: string qualifier_name = 3;
     */
    qualifierName: string;
}
/**
 * @generated from protobuf message proto.packets.Request.SetQualifierImage
 */
export interface Request_SetQualifierImage {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: bytes qualifier_image = 3;
     */
    qualifierImage: Uint8Array;
}
/**
 * @generated from protobuf message proto.packets.Request.SetQualifierInfoChannel
 */
export interface Request_SetQualifierInfoChannel {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: proto.discord.Channel info_channel = 3;
     */
    infoChannel?: Channel;
}
/**
 * @generated from protobuf message proto.packets.Request.SetQualifierFlags
 */
export interface Request_SetQualifierFlags {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent.EventSettings qualifier_flags = 3;
     */
    qualifierFlags: QualifierEvent_EventSettings;
}
/**
 * @generated from protobuf message proto.packets.Request.SetQualifierLeaderboardSort
 */
export interface Request_SetQualifierLeaderboardSort {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent.LeaderboardSort qualifier_leaderboard_sort = 3;
     */
    qualifierLeaderboardSort: QualifierEvent_LeaderboardSort;
}
/**
 * @generated from protobuf message proto.packets.Request.AddQualifierMaps
 */
export interface Request_AddQualifierMaps {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: repeated proto.models.Map maps = 3;
     */
    maps: Map[];
}
/**
 * @generated from protobuf message proto.packets.Request.UpdateQualifierMap
 */
export interface Request_UpdateQualifierMap {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: proto.models.Map map = 3;
     */
    map?: Map;
}
/**
 * @generated from protobuf message proto.packets.Request.RemoveQualifierMap
 */
export interface Request_RemoveQualifierMap {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
    /**
     * @generated from protobuf field: string map_id = 3;
     */
    mapId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.DeleteQualifierEvent
 */
export interface Request_DeleteQualifierEvent {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string qualifier_id = 2;
     */
    qualifierId: string;
}
/**
 * -- Tournament -- //
 *
 * @generated from protobuf message proto.packets.Request.AddAuthorizedUser
 */
export interface Request_AddAuthorizedUser {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
    /**
     * @generated from protobuf field: proto.models.Permissions permission_flags = 3;
     */
    permissionFlags: Permissions;
}
/**
 * @generated from protobuf message proto.packets.Request.AddAuthorizedUserPermission
 */
export interface Request_AddAuthorizedUserPermission {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
    /**
     * @generated from protobuf field: proto.models.Permissions permission = 3;
     */
    permission: Permissions;
}
/**
 * @generated from protobuf message proto.packets.Request.RemoveAuthorizedUserPermission
 */
export interface Request_RemoveAuthorizedUserPermission {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
    /**
     * @generated from protobuf field: proto.models.Permissions permission = 3;
     */
    permission: Permissions;
}
/**
 * @generated from protobuf message proto.packets.Request.RemoveAuthorizedUser
 */
export interface Request_RemoveAuthorizedUser {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.GetAuthorizedUsers
 */
export interface Request_GetAuthorizedUsers {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.GetDiscordInfo
 */
export interface Request_GetDiscordInfo {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.CreateTournament
 */
export interface Request_CreateTournament {
    /**
     * @generated from protobuf field: proto.models.Tournament tournament = 1;
     */
    tournament?: Tournament;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentName
 */
export interface Request_SetTournamentName {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string tournament_name = 2;
     */
    tournamentName: string;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentImage
 */
export interface Request_SetTournamentImage {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: bytes tournament_image = 2;
     */
    tournamentImage: Uint8Array;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentEnableTeams
 */
export interface Request_SetTournamentEnableTeams {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: bool enable_teams = 2;
     */
    enableTeams: boolean;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentEnablePools
 */
export interface Request_SetTournamentEnablePools {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: bool enable_pools = 2;
     */
    enablePools: boolean;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentShowTournamentButton
 */
export interface Request_SetTournamentShowTournamentButton {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: bool show_tournament_button = 2;
     */
    showTournamentButton: boolean;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentShowQualifierButton
 */
export interface Request_SetTournamentShowQualifierButton {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: bool show_qualifier_button = 2;
     */
    showQualifierButton: boolean;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentAllowUnauthorizedView
 */
export interface Request_SetTournamentAllowUnauthorizedView {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: bool allow_unauthorized_view = 2;
     */
    allowUnauthorizedView: boolean;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentScoreUpdateFrequency
 */
export interface Request_SetTournamentScoreUpdateFrequency {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: int32 score_update_frequency = 2;
     */
    scoreUpdateFrequency: number;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentBannedMods
 */
export interface Request_SetTournamentBannedMods {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: repeated string banned_mods = 2;
     */
    bannedMods: string[];
}
/**
 * @generated from protobuf message proto.packets.Request.AddTournamentTeam
 */
export interface Request_AddTournamentTeam {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.Tournament.TournamentSettings.Team team = 2;
     */
    team?: Tournament_TournamentSettings_Team;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentTeamName
 */
export interface Request_SetTournamentTeamName {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string team_id = 2;
     */
    teamId: string;
    /**
     * @generated from protobuf field: string team_name = 3;
     */
    teamName: string;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentTeamImage
 */
export interface Request_SetTournamentTeamImage {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string team_id = 2;
     */
    teamId: string;
    /**
     * @generated from protobuf field: bytes team_image = 3;
     */
    teamImage: Uint8Array;
}
/**
 * @generated from protobuf message proto.packets.Request.RemoveTournamentTeam
 */
export interface Request_RemoveTournamentTeam {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string team_id = 2;
     */
    teamId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.AddTournamentPool
 */
export interface Request_AddTournamentPool {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.Tournament.TournamentSettings.Pool pool = 2;
     */
    pool?: Tournament_TournamentSettings_Pool;
}
/**
 * @generated from protobuf message proto.packets.Request.SetTournamentPoolName
 */
export interface Request_SetTournamentPoolName {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string pool_id = 2;
     */
    poolId: string;
    /**
     * @generated from protobuf field: string pool_name = 3;
     */
    poolName: string;
}
/**
 * @generated from protobuf message proto.packets.Request.AddTournamentPoolMaps
 */
export interface Request_AddTournamentPoolMaps {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string pool_id = 2;
     */
    poolId: string;
    /**
     * @generated from protobuf field: repeated proto.models.Map maps = 3;
     */
    maps: Map[];
}
/**
 * @generated from protobuf message proto.packets.Request.UpdateTournamentPoolMap
 */
export interface Request_UpdateTournamentPoolMap {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string pool_id = 2;
     */
    poolId: string;
    /**
     * @generated from protobuf field: proto.models.Map map = 3;
     */
    map?: Map;
}
/**
 * @generated from protobuf message proto.packets.Request.RemoveTournamentPoolMap
 */
export interface Request_RemoveTournamentPoolMap {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string pool_id = 2;
     */
    poolId: string;
    /**
     * @generated from protobuf field: string map_id = 3;
     */
    mapId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.RemoveTournamentPool
 */
export interface Request_RemoveTournamentPool {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string pool_id = 2;
     */
    poolId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.DeleteTournament
 */
export interface Request_DeleteTournament {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
}
/**
 * -- Server -- //
 *
 * @generated from protobuf message proto.packets.Request.AddServer
 */
export interface Request_AddServer {
    /**
     * @generated from protobuf field: proto.models.CoreServer server = 1;
     */
    server?: CoreServer;
    /**
     * @generated from protobuf field: string auth_token = 2;
     */
    authToken: string;
}
/**
 * -- Other Requests -- //
 *
 * @generated from protobuf message proto.packets.Request.Connect
 */
export interface Request_Connect {
    /**
     * @generated from protobuf field: int32 client_version = 1;
     */
    clientVersion: number;
    /**
     * @generated from protobuf field: int32 ui_version = 2;
     */
    uiVersion: number;
}
/**
 * @generated from protobuf message proto.packets.Request.Join
 */
export interface Request_Join {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string password = 2;
     */
    password: string;
}
/**
 * @generated from protobuf message proto.packets.Request.QualifierScores
 */
export interface Request_QualifierScores {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string event_id = 2;
     */
    eventId: string;
    /**
     * @generated from protobuf field: string map_id = 3;
     */
    mapId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.SubmitQualifierScore
 */
export interface Request_SubmitQualifierScore {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: proto.models.LeaderboardEntry qualifier_score = 2;
     */
    qualifierScore?: LeaderboardEntry;
    /**
     * @generated from protobuf field: proto.models.GameplayParameters map = 3;
     */
    map?: GameplayParameters;
}
/**
 * @generated from protobuf message proto.packets.Request.LoadSong
 */
export interface Request_LoadSong {
    /**
     * @generated from protobuf field: string level_id = 1;
     */
    levelId: string;
    /**
     * @generated from protobuf field: string custom_host_url = 2;
     */
    customHostUrl: string;
}
/**
 * @generated from protobuf message proto.packets.Request.PreloadImageForStreamSync
 */
export interface Request_PreloadImageForStreamSync {
    /**
     * @generated from protobuf field: string file_id = 1;
     */
    fileId: string;
    /**
     * @generated from protobuf field: bool compressed = 2;
     */
    compressed: boolean;
    /**
     * @generated from protobuf field: bytes data = 3;
     */
    data: Uint8Array;
}
/**
 * @generated from protobuf message proto.packets.Request.ShowPrompt
 */
export interface Request_ShowPrompt {
    /**
     * @generated from protobuf field: string prompt_id = 1;
     */
    promptId: string;
    /**
     * @generated from protobuf field: string message_title = 2;
     */
    messageTitle: string;
    /**
     * @generated from protobuf field: string message_text = 3;
     */
    messageText: string;
    /**
     * @generated from protobuf field: int32 timeout = 4;
     */
    timeout: number;
    /**
     * @generated from protobuf field: bool show_timer = 5;
     */
    showTimer: boolean;
    /**
     * @generated from protobuf field: bool can_close = 6;
     */
    canClose: boolean;
    /**
     * @generated from protobuf field: repeated proto.packets.Request.ShowPrompt.PromptOption options = 7;
     */
    options: Request_ShowPrompt_PromptOption[];
}
/**
 * @generated from protobuf message proto.packets.Request.ShowPrompt.PromptOption
 */
export interface Request_ShowPrompt_PromptOption {
    /**
     * @generated from protobuf field: string label = 1;
     */
    label: string;
    /**
     * @generated from protobuf field: string value = 2;
     */
    value: string;
}
/**
 * @generated from protobuf message proto.packets.Request.RemainingAttempts
 */
export interface Request_RemainingAttempts {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string event_id = 2;
     */
    eventId: string;
    /**
     * @generated from protobuf field: string map_id = 3;
     */
    mapId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.GetBotTokensForUser
 */
export interface Request_GetBotTokensForUser {
    /**
     * @generated from protobuf field: string owner_discord_id = 1;
     */
    ownerDiscordId: string;
}
/**
 * @generated from protobuf message proto.packets.Request.GenerateBotToken
 */
export interface Request_GenerateBotToken {
    /**
     * @generated from protobuf field: string username = 1;
     */
    username: string;
}
/**
 * @generated from protobuf message proto.packets.Request.RevokeBotToken
 */
export interface Request_RevokeBotToken {
    /**
     * @generated from protobuf field: string bot_token_guid = 1;
     */
    botTokenGuid: string;
}
declare class Request$Type extends MessageType<Request> {
    constructor();
    create(value?: PartialMessage<Request>): Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request): Request;
    internalBinaryWrite(message: Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request
 */
export declare const Request: Request$Type;
declare class Request_UpdateUser$Type extends MessageType<Request_UpdateUser> {
    constructor();
    create(value?: PartialMessage<Request_UpdateUser>): Request_UpdateUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_UpdateUser): Request_UpdateUser;
    internalBinaryWrite(message: Request_UpdateUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.UpdateUser
 */
export declare const Request_UpdateUser: Request_UpdateUser$Type;
declare class Request_CreateMatch$Type extends MessageType<Request_CreateMatch> {
    constructor();
    create(value?: PartialMessage<Request_CreateMatch>): Request_CreateMatch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_CreateMatch): Request_CreateMatch;
    internalBinaryWrite(message: Request_CreateMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.CreateMatch
 */
export declare const Request_CreateMatch: Request_CreateMatch$Type;
declare class Request_AddUserToMatch$Type extends MessageType<Request_AddUserToMatch> {
    constructor();
    create(value?: PartialMessage<Request_AddUserToMatch>): Request_AddUserToMatch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddUserToMatch): Request_AddUserToMatch;
    internalBinaryWrite(message: Request_AddUserToMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddUserToMatch
 */
export declare const Request_AddUserToMatch: Request_AddUserToMatch$Type;
declare class Request_RemoveUserFromMatch$Type extends MessageType<Request_RemoveUserFromMatch> {
    constructor();
    create(value?: PartialMessage<Request_RemoveUserFromMatch>): Request_RemoveUserFromMatch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemoveUserFromMatch): Request_RemoveUserFromMatch;
    internalBinaryWrite(message: Request_RemoveUserFromMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemoveUserFromMatch
 */
export declare const Request_RemoveUserFromMatch: Request_RemoveUserFromMatch$Type;
declare class Request_SetMatchLeader$Type extends MessageType<Request_SetMatchLeader> {
    constructor();
    create(value?: PartialMessage<Request_SetMatchLeader>): Request_SetMatchLeader;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetMatchLeader): Request_SetMatchLeader;
    internalBinaryWrite(message: Request_SetMatchLeader, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetMatchLeader
 */
export declare const Request_SetMatchLeader: Request_SetMatchLeader$Type;
declare class Request_SetMatchMap$Type extends MessageType<Request_SetMatchMap> {
    constructor();
    create(value?: PartialMessage<Request_SetMatchMap>): Request_SetMatchMap;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetMatchMap): Request_SetMatchMap;
    internalBinaryWrite(message: Request_SetMatchMap, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetMatchMap
 */
export declare const Request_SetMatchMap: Request_SetMatchMap$Type;
declare class Request_DeleteMatch$Type extends MessageType<Request_DeleteMatch> {
    constructor();
    create(value?: PartialMessage<Request_DeleteMatch>): Request_DeleteMatch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_DeleteMatch): Request_DeleteMatch;
    internalBinaryWrite(message: Request_DeleteMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.DeleteMatch
 */
export declare const Request_DeleteMatch: Request_DeleteMatch$Type;
declare class Request_CreateQualifierEvent$Type extends MessageType<Request_CreateQualifierEvent> {
    constructor();
    create(value?: PartialMessage<Request_CreateQualifierEvent>): Request_CreateQualifierEvent;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_CreateQualifierEvent): Request_CreateQualifierEvent;
    internalBinaryWrite(message: Request_CreateQualifierEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.CreateQualifierEvent
 */
export declare const Request_CreateQualifierEvent: Request_CreateQualifierEvent$Type;
declare class Request_SetQualifierName$Type extends MessageType<Request_SetQualifierName> {
    constructor();
    create(value?: PartialMessage<Request_SetQualifierName>): Request_SetQualifierName;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetQualifierName): Request_SetQualifierName;
    internalBinaryWrite(message: Request_SetQualifierName, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetQualifierName
 */
export declare const Request_SetQualifierName: Request_SetQualifierName$Type;
declare class Request_SetQualifierImage$Type extends MessageType<Request_SetQualifierImage> {
    constructor();
    create(value?: PartialMessage<Request_SetQualifierImage>): Request_SetQualifierImage;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetQualifierImage): Request_SetQualifierImage;
    internalBinaryWrite(message: Request_SetQualifierImage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetQualifierImage
 */
export declare const Request_SetQualifierImage: Request_SetQualifierImage$Type;
declare class Request_SetQualifierInfoChannel$Type extends MessageType<Request_SetQualifierInfoChannel> {
    constructor();
    create(value?: PartialMessage<Request_SetQualifierInfoChannel>): Request_SetQualifierInfoChannel;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetQualifierInfoChannel): Request_SetQualifierInfoChannel;
    internalBinaryWrite(message: Request_SetQualifierInfoChannel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetQualifierInfoChannel
 */
export declare const Request_SetQualifierInfoChannel: Request_SetQualifierInfoChannel$Type;
declare class Request_SetQualifierFlags$Type extends MessageType<Request_SetQualifierFlags> {
    constructor();
    create(value?: PartialMessage<Request_SetQualifierFlags>): Request_SetQualifierFlags;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetQualifierFlags): Request_SetQualifierFlags;
    internalBinaryWrite(message: Request_SetQualifierFlags, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetQualifierFlags
 */
export declare const Request_SetQualifierFlags: Request_SetQualifierFlags$Type;
declare class Request_SetQualifierLeaderboardSort$Type extends MessageType<Request_SetQualifierLeaderboardSort> {
    constructor();
    create(value?: PartialMessage<Request_SetQualifierLeaderboardSort>): Request_SetQualifierLeaderboardSort;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetQualifierLeaderboardSort): Request_SetQualifierLeaderboardSort;
    internalBinaryWrite(message: Request_SetQualifierLeaderboardSort, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetQualifierLeaderboardSort
 */
export declare const Request_SetQualifierLeaderboardSort: Request_SetQualifierLeaderboardSort$Type;
declare class Request_AddQualifierMaps$Type extends MessageType<Request_AddQualifierMaps> {
    constructor();
    create(value?: PartialMessage<Request_AddQualifierMaps>): Request_AddQualifierMaps;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddQualifierMaps): Request_AddQualifierMaps;
    internalBinaryWrite(message: Request_AddQualifierMaps, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddQualifierMaps
 */
export declare const Request_AddQualifierMaps: Request_AddQualifierMaps$Type;
declare class Request_UpdateQualifierMap$Type extends MessageType<Request_UpdateQualifierMap> {
    constructor();
    create(value?: PartialMessage<Request_UpdateQualifierMap>): Request_UpdateQualifierMap;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_UpdateQualifierMap): Request_UpdateQualifierMap;
    internalBinaryWrite(message: Request_UpdateQualifierMap, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.UpdateQualifierMap
 */
export declare const Request_UpdateQualifierMap: Request_UpdateQualifierMap$Type;
declare class Request_RemoveQualifierMap$Type extends MessageType<Request_RemoveQualifierMap> {
    constructor();
    create(value?: PartialMessage<Request_RemoveQualifierMap>): Request_RemoveQualifierMap;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemoveQualifierMap): Request_RemoveQualifierMap;
    internalBinaryWrite(message: Request_RemoveQualifierMap, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemoveQualifierMap
 */
export declare const Request_RemoveQualifierMap: Request_RemoveQualifierMap$Type;
declare class Request_DeleteQualifierEvent$Type extends MessageType<Request_DeleteQualifierEvent> {
    constructor();
    create(value?: PartialMessage<Request_DeleteQualifierEvent>): Request_DeleteQualifierEvent;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_DeleteQualifierEvent): Request_DeleteQualifierEvent;
    internalBinaryWrite(message: Request_DeleteQualifierEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.DeleteQualifierEvent
 */
export declare const Request_DeleteQualifierEvent: Request_DeleteQualifierEvent$Type;
declare class Request_AddAuthorizedUser$Type extends MessageType<Request_AddAuthorizedUser> {
    constructor();
    create(value?: PartialMessage<Request_AddAuthorizedUser>): Request_AddAuthorizedUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddAuthorizedUser): Request_AddAuthorizedUser;
    internalBinaryWrite(message: Request_AddAuthorizedUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddAuthorizedUser
 */
export declare const Request_AddAuthorizedUser: Request_AddAuthorizedUser$Type;
declare class Request_AddAuthorizedUserPermission$Type extends MessageType<Request_AddAuthorizedUserPermission> {
    constructor();
    create(value?: PartialMessage<Request_AddAuthorizedUserPermission>): Request_AddAuthorizedUserPermission;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddAuthorizedUserPermission): Request_AddAuthorizedUserPermission;
    internalBinaryWrite(message: Request_AddAuthorizedUserPermission, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddAuthorizedUserPermission
 */
export declare const Request_AddAuthorizedUserPermission: Request_AddAuthorizedUserPermission$Type;
declare class Request_RemoveAuthorizedUserPermission$Type extends MessageType<Request_RemoveAuthorizedUserPermission> {
    constructor();
    create(value?: PartialMessage<Request_RemoveAuthorizedUserPermission>): Request_RemoveAuthorizedUserPermission;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemoveAuthorizedUserPermission): Request_RemoveAuthorizedUserPermission;
    internalBinaryWrite(message: Request_RemoveAuthorizedUserPermission, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemoveAuthorizedUserPermission
 */
export declare const Request_RemoveAuthorizedUserPermission: Request_RemoveAuthorizedUserPermission$Type;
declare class Request_RemoveAuthorizedUser$Type extends MessageType<Request_RemoveAuthorizedUser> {
    constructor();
    create(value?: PartialMessage<Request_RemoveAuthorizedUser>): Request_RemoveAuthorizedUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemoveAuthorizedUser): Request_RemoveAuthorizedUser;
    internalBinaryWrite(message: Request_RemoveAuthorizedUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemoveAuthorizedUser
 */
export declare const Request_RemoveAuthorizedUser: Request_RemoveAuthorizedUser$Type;
declare class Request_GetAuthorizedUsers$Type extends MessageType<Request_GetAuthorizedUsers> {
    constructor();
    create(value?: PartialMessage<Request_GetAuthorizedUsers>): Request_GetAuthorizedUsers;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_GetAuthorizedUsers): Request_GetAuthorizedUsers;
    internalBinaryWrite(message: Request_GetAuthorizedUsers, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.GetAuthorizedUsers
 */
export declare const Request_GetAuthorizedUsers: Request_GetAuthorizedUsers$Type;
declare class Request_GetDiscordInfo$Type extends MessageType<Request_GetDiscordInfo> {
    constructor();
    create(value?: PartialMessage<Request_GetDiscordInfo>): Request_GetDiscordInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_GetDiscordInfo): Request_GetDiscordInfo;
    internalBinaryWrite(message: Request_GetDiscordInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.GetDiscordInfo
 */
export declare const Request_GetDiscordInfo: Request_GetDiscordInfo$Type;
declare class Request_CreateTournament$Type extends MessageType<Request_CreateTournament> {
    constructor();
    create(value?: PartialMessage<Request_CreateTournament>): Request_CreateTournament;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_CreateTournament): Request_CreateTournament;
    internalBinaryWrite(message: Request_CreateTournament, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.CreateTournament
 */
export declare const Request_CreateTournament: Request_CreateTournament$Type;
declare class Request_SetTournamentName$Type extends MessageType<Request_SetTournamentName> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentName>): Request_SetTournamentName;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentName): Request_SetTournamentName;
    internalBinaryWrite(message: Request_SetTournamentName, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentName
 */
export declare const Request_SetTournamentName: Request_SetTournamentName$Type;
declare class Request_SetTournamentImage$Type extends MessageType<Request_SetTournamentImage> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentImage>): Request_SetTournamentImage;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentImage): Request_SetTournamentImage;
    internalBinaryWrite(message: Request_SetTournamentImage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentImage
 */
export declare const Request_SetTournamentImage: Request_SetTournamentImage$Type;
declare class Request_SetTournamentEnableTeams$Type extends MessageType<Request_SetTournamentEnableTeams> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentEnableTeams>): Request_SetTournamentEnableTeams;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentEnableTeams): Request_SetTournamentEnableTeams;
    internalBinaryWrite(message: Request_SetTournamentEnableTeams, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentEnableTeams
 */
export declare const Request_SetTournamentEnableTeams: Request_SetTournamentEnableTeams$Type;
declare class Request_SetTournamentEnablePools$Type extends MessageType<Request_SetTournamentEnablePools> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentEnablePools>): Request_SetTournamentEnablePools;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentEnablePools): Request_SetTournamentEnablePools;
    internalBinaryWrite(message: Request_SetTournamentEnablePools, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentEnablePools
 */
export declare const Request_SetTournamentEnablePools: Request_SetTournamentEnablePools$Type;
declare class Request_SetTournamentShowTournamentButton$Type extends MessageType<Request_SetTournamentShowTournamentButton> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentShowTournamentButton>): Request_SetTournamentShowTournamentButton;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentShowTournamentButton): Request_SetTournamentShowTournamentButton;
    internalBinaryWrite(message: Request_SetTournamentShowTournamentButton, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentShowTournamentButton
 */
export declare const Request_SetTournamentShowTournamentButton: Request_SetTournamentShowTournamentButton$Type;
declare class Request_SetTournamentShowQualifierButton$Type extends MessageType<Request_SetTournamentShowQualifierButton> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentShowQualifierButton>): Request_SetTournamentShowQualifierButton;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentShowQualifierButton): Request_SetTournamentShowQualifierButton;
    internalBinaryWrite(message: Request_SetTournamentShowQualifierButton, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentShowQualifierButton
 */
export declare const Request_SetTournamentShowQualifierButton: Request_SetTournamentShowQualifierButton$Type;
declare class Request_SetTournamentAllowUnauthorizedView$Type extends MessageType<Request_SetTournamentAllowUnauthorizedView> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentAllowUnauthorizedView>): Request_SetTournamentAllowUnauthorizedView;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentAllowUnauthorizedView): Request_SetTournamentAllowUnauthorizedView;
    internalBinaryWrite(message: Request_SetTournamentAllowUnauthorizedView, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentAllowUnauthorizedView
 */
export declare const Request_SetTournamentAllowUnauthorizedView: Request_SetTournamentAllowUnauthorizedView$Type;
declare class Request_SetTournamentScoreUpdateFrequency$Type extends MessageType<Request_SetTournamentScoreUpdateFrequency> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentScoreUpdateFrequency>): Request_SetTournamentScoreUpdateFrequency;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentScoreUpdateFrequency): Request_SetTournamentScoreUpdateFrequency;
    internalBinaryWrite(message: Request_SetTournamentScoreUpdateFrequency, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentScoreUpdateFrequency
 */
export declare const Request_SetTournamentScoreUpdateFrequency: Request_SetTournamentScoreUpdateFrequency$Type;
declare class Request_SetTournamentBannedMods$Type extends MessageType<Request_SetTournamentBannedMods> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentBannedMods>): Request_SetTournamentBannedMods;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentBannedMods): Request_SetTournamentBannedMods;
    internalBinaryWrite(message: Request_SetTournamentBannedMods, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentBannedMods
 */
export declare const Request_SetTournamentBannedMods: Request_SetTournamentBannedMods$Type;
declare class Request_AddTournamentTeam$Type extends MessageType<Request_AddTournamentTeam> {
    constructor();
    create(value?: PartialMessage<Request_AddTournamentTeam>): Request_AddTournamentTeam;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddTournamentTeam): Request_AddTournamentTeam;
    internalBinaryWrite(message: Request_AddTournamentTeam, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddTournamentTeam
 */
export declare const Request_AddTournamentTeam: Request_AddTournamentTeam$Type;
declare class Request_SetTournamentTeamName$Type extends MessageType<Request_SetTournamentTeamName> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentTeamName>): Request_SetTournamentTeamName;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentTeamName): Request_SetTournamentTeamName;
    internalBinaryWrite(message: Request_SetTournamentTeamName, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentTeamName
 */
export declare const Request_SetTournamentTeamName: Request_SetTournamentTeamName$Type;
declare class Request_SetTournamentTeamImage$Type extends MessageType<Request_SetTournamentTeamImage> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentTeamImage>): Request_SetTournamentTeamImage;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentTeamImage): Request_SetTournamentTeamImage;
    internalBinaryWrite(message: Request_SetTournamentTeamImage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentTeamImage
 */
export declare const Request_SetTournamentTeamImage: Request_SetTournamentTeamImage$Type;
declare class Request_RemoveTournamentTeam$Type extends MessageType<Request_RemoveTournamentTeam> {
    constructor();
    create(value?: PartialMessage<Request_RemoveTournamentTeam>): Request_RemoveTournamentTeam;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemoveTournamentTeam): Request_RemoveTournamentTeam;
    internalBinaryWrite(message: Request_RemoveTournamentTeam, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemoveTournamentTeam
 */
export declare const Request_RemoveTournamentTeam: Request_RemoveTournamentTeam$Type;
declare class Request_AddTournamentPool$Type extends MessageType<Request_AddTournamentPool> {
    constructor();
    create(value?: PartialMessage<Request_AddTournamentPool>): Request_AddTournamentPool;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddTournamentPool): Request_AddTournamentPool;
    internalBinaryWrite(message: Request_AddTournamentPool, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddTournamentPool
 */
export declare const Request_AddTournamentPool: Request_AddTournamentPool$Type;
declare class Request_SetTournamentPoolName$Type extends MessageType<Request_SetTournamentPoolName> {
    constructor();
    create(value?: PartialMessage<Request_SetTournamentPoolName>): Request_SetTournamentPoolName;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SetTournamentPoolName): Request_SetTournamentPoolName;
    internalBinaryWrite(message: Request_SetTournamentPoolName, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SetTournamentPoolName
 */
export declare const Request_SetTournamentPoolName: Request_SetTournamentPoolName$Type;
declare class Request_AddTournamentPoolMaps$Type extends MessageType<Request_AddTournamentPoolMaps> {
    constructor();
    create(value?: PartialMessage<Request_AddTournamentPoolMaps>): Request_AddTournamentPoolMaps;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddTournamentPoolMaps): Request_AddTournamentPoolMaps;
    internalBinaryWrite(message: Request_AddTournamentPoolMaps, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddTournamentPoolMaps
 */
export declare const Request_AddTournamentPoolMaps: Request_AddTournamentPoolMaps$Type;
declare class Request_UpdateTournamentPoolMap$Type extends MessageType<Request_UpdateTournamentPoolMap> {
    constructor();
    create(value?: PartialMessage<Request_UpdateTournamentPoolMap>): Request_UpdateTournamentPoolMap;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_UpdateTournamentPoolMap): Request_UpdateTournamentPoolMap;
    internalBinaryWrite(message: Request_UpdateTournamentPoolMap, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.UpdateTournamentPoolMap
 */
export declare const Request_UpdateTournamentPoolMap: Request_UpdateTournamentPoolMap$Type;
declare class Request_RemoveTournamentPoolMap$Type extends MessageType<Request_RemoveTournamentPoolMap> {
    constructor();
    create(value?: PartialMessage<Request_RemoveTournamentPoolMap>): Request_RemoveTournamentPoolMap;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemoveTournamentPoolMap): Request_RemoveTournamentPoolMap;
    internalBinaryWrite(message: Request_RemoveTournamentPoolMap, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemoveTournamentPoolMap
 */
export declare const Request_RemoveTournamentPoolMap: Request_RemoveTournamentPoolMap$Type;
declare class Request_RemoveTournamentPool$Type extends MessageType<Request_RemoveTournamentPool> {
    constructor();
    create(value?: PartialMessage<Request_RemoveTournamentPool>): Request_RemoveTournamentPool;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemoveTournamentPool): Request_RemoveTournamentPool;
    internalBinaryWrite(message: Request_RemoveTournamentPool, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemoveTournamentPool
 */
export declare const Request_RemoveTournamentPool: Request_RemoveTournamentPool$Type;
declare class Request_DeleteTournament$Type extends MessageType<Request_DeleteTournament> {
    constructor();
    create(value?: PartialMessage<Request_DeleteTournament>): Request_DeleteTournament;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_DeleteTournament): Request_DeleteTournament;
    internalBinaryWrite(message: Request_DeleteTournament, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.DeleteTournament
 */
export declare const Request_DeleteTournament: Request_DeleteTournament$Type;
declare class Request_AddServer$Type extends MessageType<Request_AddServer> {
    constructor();
    create(value?: PartialMessage<Request_AddServer>): Request_AddServer;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_AddServer): Request_AddServer;
    internalBinaryWrite(message: Request_AddServer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.AddServer
 */
export declare const Request_AddServer: Request_AddServer$Type;
declare class Request_Connect$Type extends MessageType<Request_Connect> {
    constructor();
    create(value?: PartialMessage<Request_Connect>): Request_Connect;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_Connect): Request_Connect;
    internalBinaryWrite(message: Request_Connect, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.Connect
 */
export declare const Request_Connect: Request_Connect$Type;
declare class Request_Join$Type extends MessageType<Request_Join> {
    constructor();
    create(value?: PartialMessage<Request_Join>): Request_Join;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_Join): Request_Join;
    internalBinaryWrite(message: Request_Join, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.Join
 */
export declare const Request_Join: Request_Join$Type;
declare class Request_QualifierScores$Type extends MessageType<Request_QualifierScores> {
    constructor();
    create(value?: PartialMessage<Request_QualifierScores>): Request_QualifierScores;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_QualifierScores): Request_QualifierScores;
    internalBinaryWrite(message: Request_QualifierScores, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.QualifierScores
 */
export declare const Request_QualifierScores: Request_QualifierScores$Type;
declare class Request_SubmitQualifierScore$Type extends MessageType<Request_SubmitQualifierScore> {
    constructor();
    create(value?: PartialMessage<Request_SubmitQualifierScore>): Request_SubmitQualifierScore;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_SubmitQualifierScore): Request_SubmitQualifierScore;
    internalBinaryWrite(message: Request_SubmitQualifierScore, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.SubmitQualifierScore
 */
export declare const Request_SubmitQualifierScore: Request_SubmitQualifierScore$Type;
declare class Request_LoadSong$Type extends MessageType<Request_LoadSong> {
    constructor();
    create(value?: PartialMessage<Request_LoadSong>): Request_LoadSong;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_LoadSong): Request_LoadSong;
    internalBinaryWrite(message: Request_LoadSong, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.LoadSong
 */
export declare const Request_LoadSong: Request_LoadSong$Type;
declare class Request_PreloadImageForStreamSync$Type extends MessageType<Request_PreloadImageForStreamSync> {
    constructor();
    create(value?: PartialMessage<Request_PreloadImageForStreamSync>): Request_PreloadImageForStreamSync;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_PreloadImageForStreamSync): Request_PreloadImageForStreamSync;
    internalBinaryWrite(message: Request_PreloadImageForStreamSync, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.PreloadImageForStreamSync
 */
export declare const Request_PreloadImageForStreamSync: Request_PreloadImageForStreamSync$Type;
declare class Request_ShowPrompt$Type extends MessageType<Request_ShowPrompt> {
    constructor();
    create(value?: PartialMessage<Request_ShowPrompt>): Request_ShowPrompt;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_ShowPrompt): Request_ShowPrompt;
    internalBinaryWrite(message: Request_ShowPrompt, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.ShowPrompt
 */
export declare const Request_ShowPrompt: Request_ShowPrompt$Type;
declare class Request_ShowPrompt_PromptOption$Type extends MessageType<Request_ShowPrompt_PromptOption> {
    constructor();
    create(value?: PartialMessage<Request_ShowPrompt_PromptOption>): Request_ShowPrompt_PromptOption;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_ShowPrompt_PromptOption): Request_ShowPrompt_PromptOption;
    internalBinaryWrite(message: Request_ShowPrompt_PromptOption, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.ShowPrompt.PromptOption
 */
export declare const Request_ShowPrompt_PromptOption: Request_ShowPrompt_PromptOption$Type;
declare class Request_RemainingAttempts$Type extends MessageType<Request_RemainingAttempts> {
    constructor();
    create(value?: PartialMessage<Request_RemainingAttempts>): Request_RemainingAttempts;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RemainingAttempts): Request_RemainingAttempts;
    internalBinaryWrite(message: Request_RemainingAttempts, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RemainingAttempts
 */
export declare const Request_RemainingAttempts: Request_RemainingAttempts$Type;
declare class Request_GetBotTokensForUser$Type extends MessageType<Request_GetBotTokensForUser> {
    constructor();
    create(value?: PartialMessage<Request_GetBotTokensForUser>): Request_GetBotTokensForUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_GetBotTokensForUser): Request_GetBotTokensForUser;
    internalBinaryWrite(message: Request_GetBotTokensForUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.GetBotTokensForUser
 */
export declare const Request_GetBotTokensForUser: Request_GetBotTokensForUser$Type;
declare class Request_GenerateBotToken$Type extends MessageType<Request_GenerateBotToken> {
    constructor();
    create(value?: PartialMessage<Request_GenerateBotToken>): Request_GenerateBotToken;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_GenerateBotToken): Request_GenerateBotToken;
    internalBinaryWrite(message: Request_GenerateBotToken, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.GenerateBotToken
 */
export declare const Request_GenerateBotToken: Request_GenerateBotToken$Type;
declare class Request_RevokeBotToken$Type extends MessageType<Request_RevokeBotToken> {
    constructor();
    create(value?: PartialMessage<Request_RevokeBotToken>): Request_RevokeBotToken;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Request_RevokeBotToken): Request_RevokeBotToken;
    internalBinaryWrite(message: Request_RevokeBotToken, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Request.RevokeBotToken
 */
export declare const Request_RevokeBotToken: Request_RevokeBotToken$Type;
export {};
