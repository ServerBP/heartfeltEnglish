import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Beatmap } from './models.js';
import { User } from './models.js';
import { RealtimeScore } from './models.js';
/**
 * ---- Pushes (SUBMIT something!) ---- //
 *
 * @generated from protobuf message proto.packets.Push
 */
export interface Push {
    /**
     * @generated from protobuf oneof: data
     */
    data: {
        oneofKind: "realtimeScore";
        /**
         * @generated from protobuf field: proto.models.RealtimeScore realtime_score = 1;
         */
        realtimeScore: RealtimeScore;
    } | {
        oneofKind: "songFinished";
        /**
         * @generated from protobuf field: proto.packets.Push.SongFinished song_finished = 2;
         */
        songFinished: Push_SongFinished;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message proto.packets.Push.SongFinished
 */
export interface Push_SongFinished {
    /**
     * @generated from protobuf field: proto.models.User player = 1;
     */
    player?: User;
    /**
     * @generated from protobuf field: proto.models.Beatmap beatmap = 2;
     */
    beatmap?: Beatmap;
    /**
     * @generated from protobuf field: proto.packets.Push.SongFinished.CompletionType type = 3;
     */
    type: Push_SongFinished_CompletionType;
    /**
     * @generated from protobuf field: int32 score = 4;
     */
    score: number;
    /**
     * @generated from protobuf field: int32 misses = 5;
     */
    misses: number;
    /**
     * @generated from protobuf field: int32 bad_cuts = 6;
     */
    badCuts: number;
    /**
     * @generated from protobuf field: int32 good_cuts = 7;
     */
    goodCuts: number;
    /**
     * @generated from protobuf field: float end_time = 8;
     */
    endTime: number;
    /**
     * @generated from protobuf field: string tournament_id = 9;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string match_id = 10;
     */
    matchId: string;
}
/**
 * @generated from protobuf enum proto.packets.Push.SongFinished.CompletionType
 */
export declare enum Push_SongFinished_CompletionType {
    /**
     * @generated from protobuf enum value: Passed = 0;
     */
    Passed = 0,
    /**
     * @generated from protobuf enum value: Failed = 1;
     */
    Failed = 1,
    /**
     * @generated from protobuf enum value: Quit = 2;
     */
    Quit = 2
}
declare class Push$Type extends MessageType<Push> {
    constructor();
    create(value?: PartialMessage<Push>): Push;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Push): Push;
    internalBinaryWrite(message: Push, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Push
 */
export declare const Push: Push$Type;
declare class Push_SongFinished$Type extends MessageType<Push_SongFinished> {
    constructor();
    create(value?: PartialMessage<Push_SongFinished>): Push_SongFinished;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Push_SongFinished): Push_SongFinished;
    internalBinaryWrite(message: Push_SongFinished, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Push.SongFinished
 */
export declare const Push_SongFinished: Push_SongFinished$Type;
export {};
