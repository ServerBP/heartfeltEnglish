import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message proto.discord.Channel
 */
export interface Channel {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
/**
 * @generated from protobuf message proto.discord.DiscordUser
 */
export interface DiscordUser {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
/**
 * @generated from protobuf message proto.discord.Guild
 */
export interface Guild {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
declare class Channel$Type extends MessageType<Channel> {
    constructor();
    create(value?: PartialMessage<Channel>): Channel;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Channel): Channel;
    internalBinaryWrite(message: Channel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.discord.Channel
 */
export declare const Channel: Channel$Type;
declare class DiscordUser$Type extends MessageType<DiscordUser> {
    constructor();
    create(value?: PartialMessage<DiscordUser>): DiscordUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DiscordUser): DiscordUser;
    internalBinaryWrite(message: DiscordUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.discord.DiscordUser
 */
export declare const DiscordUser: DiscordUser$Type;
declare class Guild$Type extends MessageType<Guild> {
    constructor();
    create(value?: PartialMessage<Guild>): Guild;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Guild): Guild;
    internalBinaryWrite(message: Guild, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.discord.Guild
 */
export declare const Guild: Guild$Type;
export {};
