import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { LeaderboardEntry } from './models.js';
import { State } from './models.js';
import { CoreServer } from './models.js';
import { Tournament } from './models.js';
import { Permissions } from './models.js';
import { QualifierEvent } from './models.js';
import { Match } from './models.js';
import { User } from './models.js';
/**
 * ---- Responses ---- //
 *
 * @generated from protobuf message proto.packets.Response
 */
export interface Response {
    /**
     * @generated from protobuf field: proto.packets.Response.ResponseType type = 1;
     */
    type: Response_ResponseType;
    /**
     * @generated from protobuf field: string responding_to_packet_id = 2;
     */
    respondingToPacketId: string;
    /**
     * @generated from protobuf oneof: details
     */
    details: {
        oneofKind: "updateUser";
        /**
         * @generated from protobuf field: proto.packets.Response.UpdateUser update_user = 3;
         */
        updateUser: Response_UpdateUser;
    } | {
        oneofKind: "createMatch";
        /**
         * @generated from protobuf field: proto.packets.Response.CreateMatch create_match = 4;
         */
        createMatch: Response_CreateMatch;
    } | {
        oneofKind: "updateMatch";
        /**
         * @generated from protobuf field: proto.packets.Response.UpdateMatch update_match = 5;
         */
        updateMatch: Response_UpdateMatch;
    } | {
        oneofKind: "deleteMatch";
        /**
         * @generated from protobuf field: proto.packets.Response.DeleteMatch delete_match = 6;
         */
        deleteMatch: Response_DeleteMatch;
    } | {
        oneofKind: "createQualifierEvent";
        /**
         * @generated from protobuf field: proto.packets.Response.CreateQualifierEvent create_qualifier_event = 7;
         */
        createQualifierEvent: Response_CreateQualifierEvent;
    } | {
        oneofKind: "updateQualifierEvent";
        /**
         * @generated from protobuf field: proto.packets.Response.UpdateQualifierEvent update_qualifier_event = 8;
         */
        updateQualifierEvent: Response_UpdateQualifierEvent;
    } | {
        oneofKind: "deleteQualifierEvent";
        /**
         * @generated from protobuf field: proto.packets.Response.DeleteQualifierEvent delete_qualifier_event = 9;
         */
        deleteQualifierEvent: Response_DeleteQualifierEvent;
    } | {
        oneofKind: "addAuthorizedUser";
        /**
         * @generated from protobuf field: proto.packets.Response.AddAuthorizedUser add_authorized_user = 21;
         */
        addAuthorizedUser: Response_AddAuthorizedUser;
    } | {
        oneofKind: "updateAuthorizedUser";
        /**
         * @generated from protobuf field: proto.packets.Response.UpdateAuthorizedUser update_authorized_user = 22;
         */
        updateAuthorizedUser: Response_UpdateAuthorizedUser;
    } | {
        oneofKind: "removeAuthorizedUser";
        /**
         * @generated from protobuf field: proto.packets.Response.RemoveAuthorizedUser remove_authorized_user = 23;
         */
        removeAuthorizedUser: Response_RemoveAuthorizedUser;
    } | {
        oneofKind: "getAuthorizedUsers";
        /**
         * @generated from protobuf field: proto.packets.Response.GetAuthorizedUsers get_authorized_users = 24;
         */
        getAuthorizedUsers: Response_GetAuthorizedUsers;
    } | {
        oneofKind: "getDiscordInfo";
        /**
         * @generated from protobuf field: proto.packets.Response.GetDiscordInfo get_discord_info = 25;
         */
        getDiscordInfo: Response_GetDiscordInfo;
    } | {
        oneofKind: "createTournament";
        /**
         * @generated from protobuf field: proto.packets.Response.CreateTournament create_tournament = 10;
         */
        createTournament: Response_CreateTournament;
    } | {
        oneofKind: "updateTournament";
        /**
         * @generated from protobuf field: proto.packets.Response.UpdateTournament update_tournament = 11;
         */
        updateTournament: Response_UpdateTournament;
    } | {
        oneofKind: "deleteTournament";
        /**
         * @generated from protobuf field: proto.packets.Response.DeleteTournament delete_tournament = 12;
         */
        deleteTournament: Response_DeleteTournament;
    } | {
        oneofKind: "addServer";
        /**
         * @generated from protobuf field: proto.packets.Response.AddServer add_server = 13;
         */
        addServer: Response_AddServer;
    } | {
        oneofKind: "connect";
        /**
         * @generated from protobuf field: proto.packets.Response.Connect connect = 14;
         */
        connect: Response_Connect;
    } | {
        oneofKind: "join";
        /**
         * @generated from protobuf field: proto.packets.Response.Join join = 15;
         */
        join: Response_Join;
    } | {
        oneofKind: "leaderboardEntries";
        /**
         * @generated from protobuf field: proto.packets.Response.LeaderboardEntries leaderboard_entries = 16;
         */
        leaderboardEntries: Response_LeaderboardEntries;
    } | {
        oneofKind: "loadSong";
        /**
         * @generated from protobuf field: proto.packets.Response.LoadSong load_song = 17;
         */
        loadSong: Response_LoadSong;
    } | {
        oneofKind: "preloadImageForStreamSync";
        /**
         * @generated from protobuf field: proto.packets.Response.PreloadImageForStreamSync preload_image_for_stream_sync = 18;
         */
        preloadImageForStreamSync: Response_PreloadImageForStreamSync;
    } | {
        oneofKind: "showPrompt";
        /**
         * @generated from protobuf field: proto.packets.Response.ShowPrompt show_prompt = 19;
         */
        showPrompt: Response_ShowPrompt;
    } | {
        oneofKind: "remainingAttempts";
        /**
         * @generated from protobuf field: proto.packets.Response.RemainingAttempts remaining_attempts = 20;
         */
        remainingAttempts: Response_RemainingAttempts;
    } | {
        oneofKind: "getBotTokensForUser";
        /**
         * @generated from protobuf field: proto.packets.Response.GetBotTokensForUser get_bot_tokens_for_user = 26;
         */
        getBotTokensForUser: Response_GetBotTokensForUser;
    } | {
        oneofKind: "generateBotToken";
        /**
         * @generated from protobuf field: proto.packets.Response.GenerateBotToken generate_bot_token = 27;
         */
        generateBotToken: Response_GenerateBotToken;
    } | {
        oneofKind: "revokeBotToken";
        /**
         * @generated from protobuf field: proto.packets.Response.RevokeBotToken revoke_bot_token = 28;
         */
        revokeBotToken: Response_RevokeBotToken;
    } | {
        oneofKind: undefined;
    };
}
/**
 * --- State Update Responses ---//
 *
 * @generated from protobuf message proto.packets.Response.UpdateUser
 */
export interface Response_UpdateUser {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.User user = 2;
     */
    user?: User;
}
/**
 * @generated from protobuf message proto.packets.Response.CreateMatch
 */
export interface Response_CreateMatch {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.Match match = 2;
     */
    match?: Match;
}
/**
 * @generated from protobuf message proto.packets.Response.UpdateMatch
 */
export interface Response_UpdateMatch {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.Match match = 2;
     */
    match?: Match;
}
/**
 * @generated from protobuf message proto.packets.Response.DeleteMatch
 */
export interface Response_DeleteMatch {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.Match match = 2;
     */
    match?: Match;
}
/**
 * @generated from protobuf message proto.packets.Response.CreateQualifierEvent
 */
export interface Response_CreateQualifierEvent {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent qualifier = 2;
     */
    qualifier?: QualifierEvent;
}
/**
 * @generated from protobuf message proto.packets.Response.UpdateQualifierEvent
 */
export interface Response_UpdateQualifierEvent {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent qualifier = 2;
     */
    qualifier?: QualifierEvent;
}
/**
 * @generated from protobuf message proto.packets.Response.DeleteQualifierEvent
 */
export interface Response_DeleteQualifierEvent {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.QualifierEvent qualifier = 2;
     */
    qualifier?: QualifierEvent;
}
/**
 * @generated from protobuf message proto.packets.Response.AddAuthorizedUser
 */
export interface Response_AddAuthorizedUser {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
    /**
     * @generated from protobuf field: proto.models.Permissions permission_flags = 3;
     */
    permissionFlags: Permissions;
}
/**
 * @generated from protobuf message proto.packets.Response.UpdateAuthorizedUser
 */
export interface Response_UpdateAuthorizedUser {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
    /**
     * @generated from protobuf field: proto.models.Permissions permission_flags = 3;
     */
    permissionFlags: Permissions;
}
/**
 * @generated from protobuf message proto.packets.Response.RemoveAuthorizedUser
 */
export interface Response_RemoveAuthorizedUser {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string discord_id = 2;
     */
    discordId: string;
    /**
     * @generated from protobuf field: proto.models.Permissions permission_flags = 3;
     */
    permissionFlags: Permissions;
}
/**
 * @generated from protobuf message proto.packets.Response.GetAuthorizedUsers
 */
export interface Response_GetAuthorizedUsers {
    /**
     * @generated from protobuf field: string tournament_id = 1;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: repeated proto.packets.Response.GetAuthorizedUsers.AuthroizedUser authorized_users = 2;
     */
    authorizedUsers: Response_GetAuthorizedUsers_AuthroizedUser[];
}
/**
 * @generated from protobuf message proto.packets.Response.GetAuthorizedUsers.AuthroizedUser
 */
export interface Response_GetAuthorizedUsers_AuthroizedUser {
    /**
     * @generated from protobuf field: string discord_id = 1;
     */
    discordId: string;
    /**
     * @generated from protobuf field: string discord_username = 2;
     */
    discordUsername: string;
    /**
     * @generated from protobuf field: string discord_avatar_url = 3;
     */
    discordAvatarUrl: string;
    /**
     * @generated from protobuf field: proto.models.Permissions permission = 4;
     */
    permission: Permissions;
}
/**
 * @generated from protobuf message proto.packets.Response.GetDiscordInfo
 */
export interface Response_GetDiscordInfo {
    /**
     * @generated from protobuf field: string discord_id = 1;
     */
    discordId: string;
    /**
     * @generated from protobuf field: string discord_username = 2;
     */
    discordUsername: string;
    /**
     * @generated from protobuf field: string discord_avatar_url = 3;
     */
    discordAvatarUrl: string;
}
/**
 * @generated from protobuf message proto.packets.Response.CreateTournament
 */
export interface Response_CreateTournament {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.Tournament tournament = 2;
     */
    tournament?: Tournament;
}
/**
 * @generated from protobuf message proto.packets.Response.UpdateTournament
 */
export interface Response_UpdateTournament {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.Tournament tournament = 2;
     */
    tournament?: Tournament;
}
/**
 * @generated from protobuf message proto.packets.Response.DeleteTournament
 */
export interface Response_DeleteTournament {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.Tournament tournament = 2;
     */
    tournament?: Tournament;
}
/**
 * @generated from protobuf message proto.packets.Response.AddServer
 */
export interface Response_AddServer {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.models.CoreServer server = 2;
     */
    server?: CoreServer;
}
/**
 * -- Other Responses --/
 *
 * @generated from protobuf message proto.packets.Response.Connect
 */
export interface Response_Connect {
    /**
     * @generated from protobuf field: proto.models.State state = 1;
     */
    state?: State;
    /**
     * @generated from protobuf field: int32 server_version = 2;
     */
    serverVersion: number;
    /**
     * @generated from protobuf field: string message = 3;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.packets.Response.Connect.ConnectFailReason reason = 4;
     */
    reason: Response_Connect_ConnectFailReason;
}
/**
 * @generated from protobuf enum proto.packets.Response.Connect.ConnectFailReason
 */
export declare enum Response_Connect_ConnectFailReason {
    /**
     * @generated from protobuf enum value: IncorrectVersion = 0;
     */
    IncorrectVersion = 0
}
/**
 * @generated from protobuf message proto.packets.Response.Join
 */
export interface Response_Join {
    /**
     * @generated from protobuf field: proto.models.State state = 1;
     */
    state?: State;
    /**
     * @generated from protobuf field: string self_guid = 2;
     */
    selfGuid: string;
    /**
     * @generated from protobuf field: string tournament_id = 3;
     */
    tournamentId: string;
    /**
     * @generated from protobuf field: string message = 4;
     */
    message: string;
    /**
     * @generated from protobuf field: proto.packets.Response.Join.JoinFailReason reason = 5;
     */
    reason: Response_Join_JoinFailReason;
}
/**
 * @generated from protobuf enum proto.packets.Response.Join.JoinFailReason
 */
export declare enum Response_Join_JoinFailReason {
    /**
     * @generated from protobuf enum value: IncorrectPassword = 0;
     */
    IncorrectPassword = 0
}
/**
 * @generated from protobuf message proto.packets.Response.LeaderboardEntries
 */
export interface Response_LeaderboardEntries {
    /**
     * @generated from protobuf field: repeated proto.models.LeaderboardEntry scores = 1;
     */
    scores: LeaderboardEntry[];
}
/**
 * @generated from protobuf message proto.packets.Response.LoadSong
 */
export interface Response_LoadSong {
    /**
     * @generated from protobuf field: string level_id = 1;
     */
    levelId: string;
}
/**
 * @generated from protobuf message proto.packets.Response.PreloadImageForStreamSync
 */
export interface Response_PreloadImageForStreamSync {
    /**
     * @generated from protobuf field: string file_id = 1;
     */
    fileId: string;
}
/**
 * @generated from protobuf message proto.packets.Response.ShowPrompt
 */
export interface Response_ShowPrompt {
    /**
     * @generated from protobuf field: string value = 1;
     */
    value: string;
}
/**
 * @generated from protobuf message proto.packets.Response.RemainingAttempts
 */
export interface Response_RemainingAttempts {
    /**
     * @generated from protobuf field: int32 remaining_attempts = 1;
     */
    remainingAttempts: number;
}
/**
 * @generated from protobuf message proto.packets.Response.GetBotTokensForUser
 */
export interface Response_GetBotTokensForUser {
    /**
     * @generated from protobuf field: repeated proto.packets.Response.GetBotTokensForUser.BotUser bot_users = 1;
     */
    botUsers: Response_GetBotTokensForUser_BotUser[];
}
/**
 * @generated from protobuf message proto.packets.Response.GetBotTokensForUser.BotUser
 */
export interface Response_GetBotTokensForUser_BotUser {
    /**
     * @generated from protobuf field: string guid = 1;
     */
    guid: string;
    /**
     * @generated from protobuf field: string username = 2;
     */
    username: string;
    /**
     * @generated from protobuf field: string owner_discord_id = 3;
     */
    ownerDiscordId: string;
}
/**
 * @generated from protobuf message proto.packets.Response.GenerateBotToken
 */
export interface Response_GenerateBotToken {
    /**
     * @generated from protobuf field: string bot_token = 1;
     */
    botToken: string;
}
/**
 * @generated from protobuf message proto.packets.Response.RevokeBotToken
 */
export interface Response_RevokeBotToken {
    /**
     * @generated from protobuf field: string message = 1;
     */
    message: string;
}
/**
 * @generated from protobuf enum proto.packets.Response.ResponseType
 */
export declare enum Response_ResponseType {
    /**
     * @generated from protobuf enum value: Fail = 0;
     */
    Fail = 0,
    /**
     * @generated from protobuf enum value: Success = 1;
     */
    Success = 1
}
declare class Response$Type extends MessageType<Response> {
    constructor();
    create(value?: PartialMessage<Response>): Response;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response): Response;
    internalBinaryWrite(message: Response, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response
 */
export declare const Response: Response$Type;
declare class Response_UpdateUser$Type extends MessageType<Response_UpdateUser> {
    constructor();
    create(value?: PartialMessage<Response_UpdateUser>): Response_UpdateUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_UpdateUser): Response_UpdateUser;
    internalBinaryWrite(message: Response_UpdateUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.UpdateUser
 */
export declare const Response_UpdateUser: Response_UpdateUser$Type;
declare class Response_CreateMatch$Type extends MessageType<Response_CreateMatch> {
    constructor();
    create(value?: PartialMessage<Response_CreateMatch>): Response_CreateMatch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_CreateMatch): Response_CreateMatch;
    internalBinaryWrite(message: Response_CreateMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.CreateMatch
 */
export declare const Response_CreateMatch: Response_CreateMatch$Type;
declare class Response_UpdateMatch$Type extends MessageType<Response_UpdateMatch> {
    constructor();
    create(value?: PartialMessage<Response_UpdateMatch>): Response_UpdateMatch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_UpdateMatch): Response_UpdateMatch;
    internalBinaryWrite(message: Response_UpdateMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.UpdateMatch
 */
export declare const Response_UpdateMatch: Response_UpdateMatch$Type;
declare class Response_DeleteMatch$Type extends MessageType<Response_DeleteMatch> {
    constructor();
    create(value?: PartialMessage<Response_DeleteMatch>): Response_DeleteMatch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_DeleteMatch): Response_DeleteMatch;
    internalBinaryWrite(message: Response_DeleteMatch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.DeleteMatch
 */
export declare const Response_DeleteMatch: Response_DeleteMatch$Type;
declare class Response_CreateQualifierEvent$Type extends MessageType<Response_CreateQualifierEvent> {
    constructor();
    create(value?: PartialMessage<Response_CreateQualifierEvent>): Response_CreateQualifierEvent;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_CreateQualifierEvent): Response_CreateQualifierEvent;
    internalBinaryWrite(message: Response_CreateQualifierEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.CreateQualifierEvent
 */
export declare const Response_CreateQualifierEvent: Response_CreateQualifierEvent$Type;
declare class Response_UpdateQualifierEvent$Type extends MessageType<Response_UpdateQualifierEvent> {
    constructor();
    create(value?: PartialMessage<Response_UpdateQualifierEvent>): Response_UpdateQualifierEvent;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_UpdateQualifierEvent): Response_UpdateQualifierEvent;
    internalBinaryWrite(message: Response_UpdateQualifierEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.UpdateQualifierEvent
 */
export declare const Response_UpdateQualifierEvent: Response_UpdateQualifierEvent$Type;
declare class Response_DeleteQualifierEvent$Type extends MessageType<Response_DeleteQualifierEvent> {
    constructor();
    create(value?: PartialMessage<Response_DeleteQualifierEvent>): Response_DeleteQualifierEvent;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_DeleteQualifierEvent): Response_DeleteQualifierEvent;
    internalBinaryWrite(message: Response_DeleteQualifierEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.DeleteQualifierEvent
 */
export declare const Response_DeleteQualifierEvent: Response_DeleteQualifierEvent$Type;
declare class Response_AddAuthorizedUser$Type extends MessageType<Response_AddAuthorizedUser> {
    constructor();
    create(value?: PartialMessage<Response_AddAuthorizedUser>): Response_AddAuthorizedUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_AddAuthorizedUser): Response_AddAuthorizedUser;
    internalBinaryWrite(message: Response_AddAuthorizedUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.AddAuthorizedUser
 */
export declare const Response_AddAuthorizedUser: Response_AddAuthorizedUser$Type;
declare class Response_UpdateAuthorizedUser$Type extends MessageType<Response_UpdateAuthorizedUser> {
    constructor();
    create(value?: PartialMessage<Response_UpdateAuthorizedUser>): Response_UpdateAuthorizedUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_UpdateAuthorizedUser): Response_UpdateAuthorizedUser;
    internalBinaryWrite(message: Response_UpdateAuthorizedUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.UpdateAuthorizedUser
 */
export declare const Response_UpdateAuthorizedUser: Response_UpdateAuthorizedUser$Type;
declare class Response_RemoveAuthorizedUser$Type extends MessageType<Response_RemoveAuthorizedUser> {
    constructor();
    create(value?: PartialMessage<Response_RemoveAuthorizedUser>): Response_RemoveAuthorizedUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_RemoveAuthorizedUser): Response_RemoveAuthorizedUser;
    internalBinaryWrite(message: Response_RemoveAuthorizedUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.RemoveAuthorizedUser
 */
export declare const Response_RemoveAuthorizedUser: Response_RemoveAuthorizedUser$Type;
declare class Response_GetAuthorizedUsers$Type extends MessageType<Response_GetAuthorizedUsers> {
    constructor();
    create(value?: PartialMessage<Response_GetAuthorizedUsers>): Response_GetAuthorizedUsers;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_GetAuthorizedUsers): Response_GetAuthorizedUsers;
    internalBinaryWrite(message: Response_GetAuthorizedUsers, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.GetAuthorizedUsers
 */
export declare const Response_GetAuthorizedUsers: Response_GetAuthorizedUsers$Type;
declare class Response_GetAuthorizedUsers_AuthroizedUser$Type extends MessageType<Response_GetAuthorizedUsers_AuthroizedUser> {
    constructor();
    create(value?: PartialMessage<Response_GetAuthorizedUsers_AuthroizedUser>): Response_GetAuthorizedUsers_AuthroizedUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_GetAuthorizedUsers_AuthroizedUser): Response_GetAuthorizedUsers_AuthroizedUser;
    internalBinaryWrite(message: Response_GetAuthorizedUsers_AuthroizedUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.GetAuthorizedUsers.AuthroizedUser
 */
export declare const Response_GetAuthorizedUsers_AuthroizedUser: Response_GetAuthorizedUsers_AuthroizedUser$Type;
declare class Response_GetDiscordInfo$Type extends MessageType<Response_GetDiscordInfo> {
    constructor();
    create(value?: PartialMessage<Response_GetDiscordInfo>): Response_GetDiscordInfo;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_GetDiscordInfo): Response_GetDiscordInfo;
    internalBinaryWrite(message: Response_GetDiscordInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.GetDiscordInfo
 */
export declare const Response_GetDiscordInfo: Response_GetDiscordInfo$Type;
declare class Response_CreateTournament$Type extends MessageType<Response_CreateTournament> {
    constructor();
    create(value?: PartialMessage<Response_CreateTournament>): Response_CreateTournament;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_CreateTournament): Response_CreateTournament;
    internalBinaryWrite(message: Response_CreateTournament, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.CreateTournament
 */
export declare const Response_CreateTournament: Response_CreateTournament$Type;
declare class Response_UpdateTournament$Type extends MessageType<Response_UpdateTournament> {
    constructor();
    create(value?: PartialMessage<Response_UpdateTournament>): Response_UpdateTournament;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_UpdateTournament): Response_UpdateTournament;
    internalBinaryWrite(message: Response_UpdateTournament, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.UpdateTournament
 */
export declare const Response_UpdateTournament: Response_UpdateTournament$Type;
declare class Response_DeleteTournament$Type extends MessageType<Response_DeleteTournament> {
    constructor();
    create(value?: PartialMessage<Response_DeleteTournament>): Response_DeleteTournament;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_DeleteTournament): Response_DeleteTournament;
    internalBinaryWrite(message: Response_DeleteTournament, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.DeleteTournament
 */
export declare const Response_DeleteTournament: Response_DeleteTournament$Type;
declare class Response_AddServer$Type extends MessageType<Response_AddServer> {
    constructor();
    create(value?: PartialMessage<Response_AddServer>): Response_AddServer;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_AddServer): Response_AddServer;
    internalBinaryWrite(message: Response_AddServer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.AddServer
 */
export declare const Response_AddServer: Response_AddServer$Type;
declare class Response_Connect$Type extends MessageType<Response_Connect> {
    constructor();
    create(value?: PartialMessage<Response_Connect>): Response_Connect;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_Connect): Response_Connect;
    internalBinaryWrite(message: Response_Connect, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.Connect
 */
export declare const Response_Connect: Response_Connect$Type;
declare class Response_Join$Type extends MessageType<Response_Join> {
    constructor();
    create(value?: PartialMessage<Response_Join>): Response_Join;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_Join): Response_Join;
    internalBinaryWrite(message: Response_Join, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.Join
 */
export declare const Response_Join: Response_Join$Type;
declare class Response_LeaderboardEntries$Type extends MessageType<Response_LeaderboardEntries> {
    constructor();
    create(value?: PartialMessage<Response_LeaderboardEntries>): Response_LeaderboardEntries;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_LeaderboardEntries): Response_LeaderboardEntries;
    internalBinaryWrite(message: Response_LeaderboardEntries, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.LeaderboardEntries
 */
export declare const Response_LeaderboardEntries: Response_LeaderboardEntries$Type;
declare class Response_LoadSong$Type extends MessageType<Response_LoadSong> {
    constructor();
    create(value?: PartialMessage<Response_LoadSong>): Response_LoadSong;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_LoadSong): Response_LoadSong;
    internalBinaryWrite(message: Response_LoadSong, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.LoadSong
 */
export declare const Response_LoadSong: Response_LoadSong$Type;
declare class Response_PreloadImageForStreamSync$Type extends MessageType<Response_PreloadImageForStreamSync> {
    constructor();
    create(value?: PartialMessage<Response_PreloadImageForStreamSync>): Response_PreloadImageForStreamSync;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_PreloadImageForStreamSync): Response_PreloadImageForStreamSync;
    internalBinaryWrite(message: Response_PreloadImageForStreamSync, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.PreloadImageForStreamSync
 */
export declare const Response_PreloadImageForStreamSync: Response_PreloadImageForStreamSync$Type;
declare class Response_ShowPrompt$Type extends MessageType<Response_ShowPrompt> {
    constructor();
    create(value?: PartialMessage<Response_ShowPrompt>): Response_ShowPrompt;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_ShowPrompt): Response_ShowPrompt;
    internalBinaryWrite(message: Response_ShowPrompt, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.ShowPrompt
 */
export declare const Response_ShowPrompt: Response_ShowPrompt$Type;
declare class Response_RemainingAttempts$Type extends MessageType<Response_RemainingAttempts> {
    constructor();
    create(value?: PartialMessage<Response_RemainingAttempts>): Response_RemainingAttempts;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_RemainingAttempts): Response_RemainingAttempts;
    internalBinaryWrite(message: Response_RemainingAttempts, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.RemainingAttempts
 */
export declare const Response_RemainingAttempts: Response_RemainingAttempts$Type;
declare class Response_GetBotTokensForUser$Type extends MessageType<Response_GetBotTokensForUser> {
    constructor();
    create(value?: PartialMessage<Response_GetBotTokensForUser>): Response_GetBotTokensForUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_GetBotTokensForUser): Response_GetBotTokensForUser;
    internalBinaryWrite(message: Response_GetBotTokensForUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.GetBotTokensForUser
 */
export declare const Response_GetBotTokensForUser: Response_GetBotTokensForUser$Type;
declare class Response_GetBotTokensForUser_BotUser$Type extends MessageType<Response_GetBotTokensForUser_BotUser> {
    constructor();
    create(value?: PartialMessage<Response_GetBotTokensForUser_BotUser>): Response_GetBotTokensForUser_BotUser;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_GetBotTokensForUser_BotUser): Response_GetBotTokensForUser_BotUser;
    internalBinaryWrite(message: Response_GetBotTokensForUser_BotUser, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.GetBotTokensForUser.BotUser
 */
export declare const Response_GetBotTokensForUser_BotUser: Response_GetBotTokensForUser_BotUser$Type;
declare class Response_GenerateBotToken$Type extends MessageType<Response_GenerateBotToken> {
    constructor();
    create(value?: PartialMessage<Response_GenerateBotToken>): Response_GenerateBotToken;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_GenerateBotToken): Response_GenerateBotToken;
    internalBinaryWrite(message: Response_GenerateBotToken, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.GenerateBotToken
 */
export declare const Response_GenerateBotToken: Response_GenerateBotToken$Type;
declare class Response_RevokeBotToken$Type extends MessageType<Response_RevokeBotToken> {
    constructor();
    create(value?: PartialMessage<Response_RevokeBotToken>): Response_RevokeBotToken;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Response_RevokeBotToken): Response_RevokeBotToken;
    internalBinaryWrite(message: Response_RevokeBotToken, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message proto.packets.Response.RevokeBotToken
 */
export declare const Response_RevokeBotToken: Response_RevokeBotToken$Type;
export {};
